<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MongoDB Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">Shows how to setup a MongoDB Test</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">165</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1367357168000</longProp>
        <longProp name="ThreadGroup.end_time">1367357168000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi utente" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);
Document document = new Document(&quot;nome&quot;, &quot;Eli&quot;).append(&quot;email&quot;, &quot;t@t.com&quot;).append(&quot;id_utente&quot;,1);
utenti_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi stanza" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;stanze&quot;);
Document document = new Document(&quot;prezzo&quot;, &quot;100&quot;).append(&quot;proprietario&quot;, &quot;Luigi&quot;).append(&quot;id_stanza&quot;,1);
utenti_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi prenotazione" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection prenotazioni_collection = database.getCollection(&quot;prenotazioni&quot;);
Document document = new Document(&quot;id_utente&quot;, &quot;1&quot;).append(&quot;id_stanza&quot;, &quot;1&quot;).append(&quot;start_date&quot;, &quot;02-02-2020&quot;).append(&quot;end_date&quot;, &quot;10-02-2020&quot;).append(&quot;pagato&quot;, &quot;false&quot;);
prenotazioni_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Mostra utenti" enabled="false">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);

for (Document cur : utenti_collection.find()) {
    System.out.println(cur.toJson());
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Mostra stanze" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection stanze_collection = database.getCollection(&quot;stanze&quot;);

for (Document cur : stanze_collection.find()) {
    System.out.println(cur.toJson());
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Modifica utente" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;
import com.mongodb.client.result.UpdateResult;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);

//Updating multiple documents
Document filter = new Document(&quot;email&quot;, &quot;t@t.com&quot;);
Document newValue = new Document(&quot;email&quot;, &quot;eli@gmail.com&quot;);
Document updateOperationDocument = new Document(&quot;$set&quot;, newValue);
utenti_collection.updateMany(filter, updateOperationDocument);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Modifica stanze" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;
import com.mongodb.client.result.UpdateResult;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection stanze_collection = database.getCollection(&quot;stanze&quot;);

//Updating multiple documents
Document filter = new Document(&quot;prezzo&quot;, &quot;100&quot;);
Document newValue = new Document(&quot;prezzo&quot;, &quot;80&quot;);
Document updateOperationDocument = new Document(&quot;$set&quot;, newValue);
stanze_collection.updateMany(filter, updateOperationDocument);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">165</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1367357168000</longProp>
        <longProp name="ThreadGroup.end_time">1367357168000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi utente" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);
Document document = new Document(&quot;nome&quot;, &quot;Ale&quot;).append(&quot;email&quot;, &quot;ale@ale.com&quot;).append(&quot;id_utente&quot;,2);
utenti_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi stanza" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;stanze&quot;);
Document document = new Document(&quot;prezzo&quot;, &quot;90&quot;).append(&quot;proprietario&quot;, &quot;Antonio&quot;).append(&quot;id_stanza&quot;,2);
utenti_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi prenotazione" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection prenotazioni_collection = database.getCollection(&quot;prenotazioni&quot;);
Document document = new Document(&quot;id_utente&quot;, &quot;2&quot;).append(&quot;id_stanza&quot;, &quot;2&quot;).append(&quot;start_date&quot;, &quot;02-02-2020&quot;).append(&quot;end_date&quot;, &quot;10-02-2020&quot;).append(&quot;pagato&quot;, &quot;false&quot;);
prenotazioni_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Mostra utenti" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);

for (Document cur : utenti_collection.find()) {
    System.out.println(cur.toJson());
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Mostra stanze" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection stanze_collection = database.getCollection(&quot;stanze&quot;);

for (Document cur : stanze_collection.find()) {
    System.out.println(cur.toJson());
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Modifica utente" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;
import com.mongodb.client.result.UpdateResult;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);

//Updating multiple documents
Document filter = new Document(&quot;email&quot;, &quot;ale@ale.com&quot;);
Document newValue = new Document(&quot;email&quot;, &quot;alessandro@gmail.com&quot;);
Document updateOperationDocument = new Document(&quot;$set&quot;, newValue);
utenti_collection.updateMany(filter, updateOperationDocument);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Modifica stanze" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;
import com.mongodb.client.result.UpdateResult;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection stanze_collection = database.getCollection(&quot;stanze&quot;);

//Updating multiple documents
Document filter = new Document(&quot;prezzo&quot;, &quot;90&quot;);
Document newValue = new Document(&quot;prezzo&quot;, &quot;120&quot;);
Document updateOperationDocument = new Document(&quot;$set&quot;, newValue);
stanze_collection.updateMany(filter, updateOperationDocument);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">165</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1367357168000</longProp>
        <longProp name="ThreadGroup.end_time">1367357168000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi utente" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);
Document document = new Document(&quot;nome&quot;, &quot;Fede&quot;).append(&quot;email&quot;, &quot;f@f.com&quot;).append(&quot;id_utente&quot;,3);
utenti_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi stanza" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;stanze&quot;);
Document document = new Document(&quot;prezzo&quot;, &quot;150&quot;).append(&quot;proprietario&quot;, &quot;Maria&quot;).append(&quot;id_stanza&quot;,3);
utenti_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Aggiungi prenotazione" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection prenotazioni_collection = database.getCollection(&quot;prenotazioni&quot;);
Document document = new Document(&quot;id_utente&quot;, &quot;3&quot;).append(&quot;id_stanza&quot;, &quot;3&quot;).append(&quot;start_date&quot;, &quot;02-02-2020&quot;).append(&quot;end_date&quot;, &quot;10-02-2020&quot;).append(&quot;pagato&quot;, &quot;true&quot;);
prenotazioni_collection.insertOne(document);

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Mostra utenti" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);

for (Document cur : utenti_collection.find()) {
    System.out.println(cur.toJson());
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Mostra stanze" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import java.util.Arrays;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection stanze_collection = database.getCollection(&quot;stanze&quot;);

for (Document cur : stanze_collection.find()) {
    System.out.println(cur.toJson());
}
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Modifica utente" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;
import com.mongodb.client.result.UpdateResult;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection utenti_collection = database.getCollection(&quot;utenti&quot;);

//Updating multiple documents
Document filter = new Document(&quot;email&quot;, &quot;f@f.com&quot;);
Document newValue = new Document(&quot;email&quot;, &quot;fede@gmail.com&quot;);
Document updateOperationDocument = new Document(&quot;$set&quot;, newValue);
utenti_collection.updateMany(filter, updateOperationDocument);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Modifica stanze" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.*;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
import java.util.Arrays;
import com.mongodb.client.result.UpdateResult;

MongoClient mongoClient = MongoClients.create(&quot;mongodb://10.27.0.20:27017&quot;);
MongoDatabase database = mongoClient.getDatabase(&quot;load_test_jmeter&quot;);
MongoCollection stanze_collection = database.getCollection(&quot;stanze&quot;);

//Updating multiple documents
Document filter = new Document(&quot;prezzo&quot;, &quot;150&quot;);
Document newValue = new Document(&quot;prezzo&quot;, &quot;180&quot;);
Document updateOperationDocument = new Document(&quot;$set&quot;, newValue);
stanze_collection.updateMany(filter, updateOperationDocument);
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
